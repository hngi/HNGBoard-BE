swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: " HNG8 BOARD"
host: "hng.hngboard.me"
basePath: "/"
tags:
- name: "Admin"
  description: "Everything about Admin"
- name: "Users"
  description: "Everything about User"
- name: "Tasks"
  description: "Everything about Tasks"
- name: "Posts"
  description: "Everything about Posts"
- name: "Submissions"
  description: "Everything about Submission"
schemes:
- "https"
paths:
  /admin/register:
    post:
      tags:
      - "Admin"
      summary: ""
      description: ""
      operationId: "adminRegister"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "adminId"
        in: "path"
        description: "Register a new admin"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          type: "object"
          required:
          - "number"
          properties:
            number:
              type: "string"
              example: "+23480000000"
      responses:
        "200":
          description: "Successful operation"
        "405":
          description: "Invalid input"
  /admin/login:
    post:
      tags:
      - "Admin"
      summary: "Add a new login to user"
      description: ""
      operationId: "adminLogin"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "adminId"
        in: "path"
        description: "admin login id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Admin active"
        required: true
        schema:
          $ref: "#/definitions/Admin"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Admin"
        "405":
          description: "Invalid input"
  /users/register:
    post:
      tags:
      - "Users"
      summary: "Add a new user to app"
      description: "User object that needs to be created"
      operationId: "addUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Users object"
        required: true
        schema:
          $ref: "#/definitions/Users"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Users"
        "405":
          description: "Invalid input"
  /users/login:
    post:
      tags:
      - "Users"
      summary: "Add a new login to user"
      description: ""
      operationId: "userLogin"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "user login id"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "user active"
        required: true
        schema:
          $ref: "#/definitions/Users"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Users"
        "405":
          description: "Invalid input"
  /users:
    patch:
      tags:
      - "Users"
      summary: "Update user profile"
      description: ""
      operationId: "updateUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "user profile update"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Users object that updated"
        required: true
        schema:
          $ref: "#/definitions/Users"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Users"
        "405":
          description: "Invalid input"
  /users/:userId/tasks/:taskId/submissions:
    post:
      tags:
      - "Users"
      summary: "Create a new submissions"
      description: ""
      operationId: "createSubmissions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Submissions object that needs to be added to the user"
        required: true
        schema:
          $ref: "#/definitions/Users"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Users"
        "405":
          description: "Invalid input"
  /users/:userId/tasks:
    get:
      tags:
      - "Users"
      summary: "Get all the tasks for specific user"
      description: ""
      operationId: "getAllTask"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
           type: "array"
           items:
            $ref: "#/definitions/Users"
        "400":
          description: "Invalid ID  users"
        "404":
          description: "user not found"
  /tasks:
    post:
      tags:
      - "Tasks"
      summary: "Add a new task"
      description: ""
      operationId: "addTask"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Tasks object that needs to be added to the userd"
        required: true
        schema:
          $ref: "#/definitions/Tasks"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Tasks"
        "405":
          description: "Invalid input"
  /tasks/:taskId:
    get:
      tags:
      - "Tasks"
      summary: "Get a task"
      description: ""
      operationId: "getTask"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
           type: "array"
           items:
            $ref: "#/definitions/Tasks"
        "400":
          description: "Invalid ID  Tasks"
        "404":
          description: "Task not found"
  /tasks/:taskId/submissions:
    get:
      tags:
      - "Tasks"
      summary: "Get all submissions for tasks"
      description: ""
      operationId: "getTask"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
           type: "array"
           items:
            $ref: "#/definitions/Tasks"
        "400":
          description: "Invalid ID  Tasks"
        "404":
          description: "Task not found"
  /tasks/{taskId}:
    patch:
      tags:
      - "Tasks"
      summary: "Update an existing Task"
      description: "Updates a task by id, with key-value pairs"
      operationId: "updateTask"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "taskId"
        in: "path"
        description: "ID of task to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Task object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Tasks"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Tasks"
        "404":
          description: "User not found"
        "500":
          description: "Server Error"
  /posts:
    post:
      tags:
      - "Posts"
      summary: "Add a new post"
      description: ""
      operationId: "addPost"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Post object that needs to be added to the user"
        required: true
        schema:
          $ref: "#/definitions/Posts"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Posts"
        "405":
          description: "Invalid input"
  /posts/all:
    get:
      tags:
      - "Posts"
      summary: "Get all the posts"
      description: ""
      operationId: "getPost"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
           type: "array"
           items:
            $ref: "#/definitions/Posts"
        "400":
          description: "Invalid ID  Posts"
        "404":
          description: "Post not found"
  /posts/{postId}:
    get:
      tags:
      - "Posts"
      summary: "Get a particular post"
      description: ""
      operationId: "getPost"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
           type: "array"
           items:
            $ref: "#/definitions/Posts"
        "400":
          description: "Invalid ID  Posts"
        "404":
          description: "Post not found"
    /submissions/{submissionsId}:
    patch:
      tags:
      - "Submission"
      summary: "Grade a task"
      description: ""
      operationId: "gradeTask"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "submissionId"
        in: "path"
        description: "user stage update"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Submissions object that is graded"
        required: true
        schema:
          $ref: "#/definitions/Submissions"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Submissions"
        "405":
          description: "Invalid input"
definitions:
  Users:
    type: "object"
    required:
    - "first_name"
    - "last_name"
    - "phone_number"
    - "email"
    - "password"
    - "userId"
    properties:
      userId:
        type: "integer"
        format: "int64"
      first_name:
        type: "string"
        example: "zakah"
      last_name:
        type: "string"
        example: "Rzkah"
      phone_number:
        type: "number"
      password:
        type: "string"
      email:
        type: "string"
        example: "mikah@domain.com"
  admin:
    type: "object"
    required:
    - "first_name"
    - "last_name"
    - "phone_number"
    - "email"
    - "password"
    - "adminId"
    properties:
      adminId:
        type: "integer"
        format: "int64"
      first_name:
        type: "string"
        example: "kazkah"
      last_name:
        type: "string"
        example: "zikah"
      phone_number:
        type: "string"
      password:
        type: "string"
      email:
        type: "string"
        example: "mikah@domain.com"
      username:
        type: "string"
      user_role:
        type: "string"
  Tasks:
    type: "object"
    required:
    - "taskId"
    - "task_link"
    - "task_description"
    - "submissions"
    properties:
      taskId:
        type: "integer"
        format: "int64"
      task_link:
        type: "string"
        example: "htttps://github.com"
      task_description:
        type: "string"
        example: "my first app"
      submissions:
        type: "string"
  Posts:
    type: "object"
    required:
    - "postId"
    - "post_link"
    - "post_description"
    - "submissions"
    properties:
      postId:
        type: "integer"
        format: "int64"
      post_link:
        type: "string"
        example: "htttps://lucid.com"
      post_description:
        type: "string"
        example: "my first app"
      submissions:
        type: "string"
  Submissions:
    type: "object"
    required:
    - "submissionsId"
    - "post_link"
    - "post_description"
    - "submissions"
    properties:
      submissionsId:
        type: "integer"
        format: "int64"
      submissions_Grade:
        type: "integer"
        example: "1"
      stage:
        type: "string"
        example: "stage1"
